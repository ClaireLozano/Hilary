/*!
 * Copyright 2018 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');
var async = require('async');
var cronJob = require('cron').CronJob;

var ConfigAPI = require('oae-config');
var PrincipalsConfig = ConfigAPI.config('oae-principals');
var PrincipalsDAO = require('./internal/dao');
var UserDeletionUtil = require('oae-principals/lib/definitiveDeletion');

/**
 * Create a task which will remove users from the Data Archive table by which the date is exceeded
 *
 * @param  {Function}    callback        Standard callback function
 * @api private
 */
var programUserDeletionTask = module.exports.programUserDeletionTask = function(globalContext, callback) {

    var timezone = PrincipalsConfig.getValue(globalContext.tenant().alias, 'timezone', 'timezone');

    if (!timezone) {
        timezone = 'Etc/UTC';
    }

    /* 
     * Create cron to definitely delete a user
     * Runs every Sunday at 00:00:00 AM. 
     */
    return callback(null, new cronJob('00 00 00 * * 7', function() {
        var actualDate = new Date();

        // Get list of pricipals which must be deleted
        PrincipalsDAO.getExpiredUser(actualDate, function(err, principalsToDelete) {
            if (err) {
                return callback(err);
            }

            if (_.isEmpty(principalsToDelete)) {
                return;
            }

            async.mapSeries(principalsToDelete, function(principal, callback) {

                // Restore user to avoid errors
                PrincipalsDAO.restorePrincipal(principal.principalId, function(err) {
                    if (err) {
                        console.log(err);
                    }

                    // Get the principal
                    PrincipalsDAO.getPrincipal(principal.principalId, function (err, principal) {
                        if (err) {
                            console.log(err);
                        }

                        // Delete user 
                        UserDeletionUtil.definitiveDeletion(globalContext, principal, principal.tenant.alias, function(err) {
                            if (err) {
                                console.log(err);
                            }
                            return callback();
                        });
                    });
                });
            });
        });
    }, null, true, 'America/Los_Angeles'));
};
